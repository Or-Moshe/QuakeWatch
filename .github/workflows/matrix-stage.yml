name: matrix stage

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - stage
  workflow_dispatch:

jobs:
  TEST:
    name: Build & Test For STAGE
    runs-on: ${{ matrix.os }}
    environment: STAGE
    
    strategy:
      matrix:
        python: [3.12]
        os: [ubuntu-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Print message
        run: echo "Hello, CI with GitHub Actions!"

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pylint

      - name: Run pylint
        run: |
          pylint *.py || true
  all-tests-passed:
    name: Build & Test For STAGE succeed
    runs-on: ubuntu-latest
    needs: TEST
    if: always()
    steps:
      - run: echo "All matrix jobs passed âœ…"

  deploy-helm-charts:
      name: Deploy Helm Chart to Cluster
      runs-on: ubuntu-latest
      needs: all-tests-passed

      steps:
        - name: Checkout repository
          uses: actions/checkout@v4

        - name: Set up Helm
          uses: azure/setup-helm@v3
          with:
            version: v3.13.0

        - name: Set up kubectl
          uses: azure/setup-kubectl@v4
          with:
            version: v1.33.1

        - name: Configure kubeconfig
          run: |
            mkdir -p ~/.kube
            echo "${{ secrets.KUBECONFIG_CONTENT }}" > ~/.kube/config

        - name: Deploy Helm chart - quakewatch
          run: |
            helm upgrade --i quakewatch ./project-charts/charts/quakewatch \
              -n quakewatch-phase4 \
              -f ./project-charts/values-dev.yaml

  
  
  
  








          

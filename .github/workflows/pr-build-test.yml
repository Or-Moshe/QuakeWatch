name: matrix

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main
  workflow_dispatch:

jobs:
  DEV:
    name: Build & Test For DEV
    runs-on: ${{ matrix.os }}
    environment: DEV
    
    strategy:
      matrix:
        python: [3.11, 3.12]
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Print message
        run: echo "Hello, CI with GitHub Actions!"

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pylint

      - name: Run pylint
        run: |
          pylint *.py || true

  QA:
    name: Build & Test For QA
    runs-on: ${{ matrix.os }}
    environment: QA
    needs: DEV
    
    strategy:
      matrix:
        python: [3.11, 3.12]
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Print message
        run: echo "Hello, CI with GitHub Actions!"

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pylint

      - name: Run pylint
        run: |
          pylint *.py || true

  PROD:
    name: Build & Test For PROD
    runs-on: ${{ matrix.os }}
    environment: PROD
    needs: QA
    
    strategy:
      matrix:
        python: [3.12]
        os: [ubuntu-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Print message
        run: echo "Hello, CI with GitHub Actions!"

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pylint

      - name: Run pylint
        run: |
          pylint *.py || true

  helm-publish-docker:
    name: Publish Helm Chart to Docker Hub
    runs-on: ubuntu-latest
    needs: PROD
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
  
      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.12.0
  
      - name: Log in to Docker Hub for Helm
        run: |
               helm registry login registry-1.docker.io \
                -u ${{ secrets.DOCKER_HUB_USERNAME }} \
                -p ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
  
      - name: Package Helm chart as OCI image
        run: |
           helm chart save ./charts/mychart ${{ secrets.DOCKER_HUB_USERNAME }}/mychart:$VERSION
  
      - name: Push Helm chart to Docker Hub
        run: |
          helm chart push ${{ secrets.DOCKER_HUB_USERNAME }}/mychart:$VERSION
  
  
  
  








          

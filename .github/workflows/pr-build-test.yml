name: matrix

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main

jobs:
  DEV:
    name: Build & Test For DEV
    runs-on: ${{ matrix.os }}
    environment: DEV
    
    strategy:
      matrix:
        python: [3.11, 3.12]
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Print message
        run: echo "Hello, CI with GitHub Actions!"

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pylint

      - name: Run pylint
        run: |
          pylint *.py || true

  QA:
    name: Build & Test For QA
    runs-on: ${{ matrix.os }}
    environment: QA
    needs: DEV
    
    strategy:
      matrix:
        python: [3.11, 3.12]
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Print message
        run: echo "Hello, CI with GitHub Actions!"

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pylint

      - name: Run pylint
        run: |
          pylint *.py || true

  PROD:
    name: Build & Test For PROD
    runs-on: ${{ matrix.os }}
    environment: PROD
    needs: QA
    
    strategy:
      matrix:
        python: [3.11, 3.12]
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Print message
        run: echo "Hello, CI with GitHub Actions!"

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pylint

      - name: Run pylint
        run: |
          pylint *.py || true

      - name: Set up Helm
        uses: azure/setup-helm@v3  # Official Helm GitHub Action
        with:
          version: v3.12.0          # Change to your desired Helm version
  
      - name: Package Helm chart
        run: |
          helm lint ./charts/mychart       # Optional: lint before packaging
          helm package ./charts/mychart    # Create .tgz package
  
      - name: Publish Helm chart
        env:
          HELM_REPO_URL: ${{ secrets.HELM_REPO_URL }}      # e.g., https://charts.example.com
          HELM_REPO_USER: ${{ secrets.HELM_REPO_USER }}
          HELM_REPO_PASSWORD: ${{ secrets.HELM_REPO_PASSWORD }}
        run: |
          helm repo add myrepo $HELM_REPO_URL --username $HELM_REPO_USER --password $HELM_REPO_PASSWORD
          helm push mychart-*.tgz myrelease












          
